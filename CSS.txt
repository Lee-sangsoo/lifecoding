1. <font> 글자의 색 변경 가능 -> 요즘은 쓰이지 않는다.
	ㄴ <font color=""> ... </font>
	ㄴ 이건 CSS가 아니라 html의 태그에 불과하다

2. 컴퓨터에 CSS문법임을 알려주어야 한다. 
	ㄴ 이때 사용하는 태그가 <style> ... </style>
	ㄴ 이 태그 사이에 있는 내용들은 CSS 문법이라는 뜻이므로 그에 맞춰 해석하라는 뜻임

3. 모든 CSS 문법은 style 사이에 들어간다.

4. 모든 a태그에 대해 해당 내용을 빨간색으로 바꾸고 싶다면
	a {
		color : red;
	   }
	와 같이 적어준다.   (세미콜론, 중괄호)

5. CSS를 사용하는 방법은 <style>과 같이 태그를 이용하는 방법도 있지만, "style 속성"을 이용하는
   방법도 존재한다.

6. 스타일 속성 => <a hred="..." style="color:red"> 와 같이 사용
	ㄴ style 속성은 html의 속성이다.
	ㄴ " 사이의 내용은 CSS의 내용이 들어온다.

7. style 태그 안의 내용을 선택자 + 효과 로 부른다.

8. text-decoration : none 을 통해서 밑줄을 지울 수 있다 (장식 요과를 지우는 듯 하다)

9. 만약 다른 부분은 밑줄이 없고 특정 부분만 밑줄이 있기를 바란다면?
	ㄴ 속성 안에 작성
	ㄴ <a href="..." style="color:red; text-decoration:underline"> 과 같이 ;을 통해 구분하고 추가

10. font-size를 통해 글자 크기 지정 가능
	ㄴ 이런 속성들을 찾기 위해 검색할 때 -> "CSS ~~~ property" 로 검색

11. class를 사용하여 여러개의 태그를 하나로 묶을 수 있다.

12. class에 CSS를 적용하려면 .이름 으로 적용한다.

13. class 속성의 내용은(이름은) 여러개로 들어올 수 있다.
	ㄴ class = "saw" // class = "saw active" 와 같이
	ㄴ 이 경우 CSS 선언을 .saw 와 .active 2개로 한다.
	ㄴ 하지만 이 경우는 좋지 않다. -> 2가지를 모두 실행하기 때문에 순서에 따라 결과가 달라진다.
	ㄴ 이를 방지하기 위해 active는 따로 id로 빼주자 
		ㄴ class="saw" id="active"
		ㄴ 이 경우 CSS 선언 = #active

14. id 선택자 > class 선택자 > 태그 선택자
	ㄴ id는 중복이 되면 안된다 (학번, 주민번호 와 같은 개념)

15. CSS selector 라고 검색하여 선택자를 검색 가능하다.

16. 속성 중 display를 통해 블럭 레벨과 인라인 레벨의 변동이 가능하다.

17. CSS 선언 때 여러 태그에 중복이 있다면, (,)를 사용하여 중복 최소화 가능
	ㄴ a {}, b {}  ---> a, b {}   (or 연산)

18. 여러 속성들을 사용할 때, 중복이 되는 것들 최소화 가능
	ㄴ border-width, border-color, border-style -> border : width style color (순서 상관 X)
					                       값     값      값
 
19. 하나의 블럭 안에 내용에 여백을 조정하는 padding

20. 블럭간의 여백을 조정하는 margin

21. div태그는 아무 의미도 없고 그저 디자인을 위해 사용되는 태그이다.
	ㄴ span태그도 동일 (div = block level // span = inline level)

22. fr(프레임인듯?) 을 이용하여 자동 크기 지정이 가능하다.

23. caniuse.com 을 통해 현재 기술을 사용하면 다른 사람이 많이 이용 가능한지를 확인 가능하다.

24. grid라는 id를 가지는 태그 안의 ol태그 -> #grid ol { ... } 와 같이 써주기
	ㄴ 이 경우는 선택자 안에 선택자인 것이고 (중첩 연산)
	ㄴ 만약 b태그 안에 있는 codeit이라는 id가 있다면 -> b.codeit{ ... } 과 같이 적어준다.
			(b태그이면서, codeit이라는 class를 가지는 태그 -> AND연산)
			(class 이름이 codeit인 b태그)
	ㄴ 태그 li의 "직속 자식 태그" i를 바꾸고 싶다 => li > i { ... }
	ㄴ '*'를 사용하면 -> 모든 태그 (Ex) li > * = li 태그 안의 모든 직속 자식 태그
				     li * = li 태그 안의 모든 태그

25. 반응형 디자인 가능

26. 화면의 크기가 800 이상, 이하 일 때 ~~한 작업을 한다 => @media 사용
	ㄴ @media(min-width:800px)
	        div{ ... }                           --> 화면의 크기가 최소 800px이라면 div의 내용을 실행
	     ㄴ == screen width > 800px  --> 화면의 크기가 800px보다 크다면 실행

	ㄴ max-width:800px == screen width < 800px

27. CSS또한 일일히 똑같은 코드를 집어 넣는것은 좋지 않은 방법이다.
	ㄴ C언어의 헤더파일처럼 .css 파일을 만들어서 포함시키는 방법이 있다.
	ㄴ <link rel="stylesheet" href="style.css"> -> link 태그를 사용하여 포함 가능

28. href의 내용을 css 선택자로 사용하고 싶다면 -> [href="http://www.naver.com"]{ ... } 과 같이 사용
	ㄴ id = #id
	ㄴ class = .class
	ㄴ tag = tag
	ㄴ 나머지 = [name]














