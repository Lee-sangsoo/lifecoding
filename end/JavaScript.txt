1. input태그의 속성 중 onclick의 내용은 JS가 와야 한다.
	ㄴ 이 input을 작동하면 onclick의 JS 내용이 실행된다.

2. JS는 사용자와 상호작용하는 언어이다.
   웹브라우저는 한번 화면에 출력되면 자기 자신을 바꿀 수 없다.
	하지만 JS를 통해 바꿀 수 있다.

3. html 안에 JS를 사용하기 위해서는 태그를 통해 이 부분은 JS이다 라고 알려줘야 한다.
	ㄴ 이 때 사용하는 태그가 <script> ... </script> 이다.

4. JS는 동적이다. 1+1을 document.write(1+1)로 출력하면 2가 나온다

5. 페이지 검사의 console을 통해 JS코드의 실행이 가능하다

6. JS를 통해 현재 있는 페이지에서 할 수 있는 일이 많다 -> n명의 댓글 중에서 랜덤으로 몇명 뽑기 등

7. JS도 자바와 마찬가지로 변수와 문자열을 함께 출력을 위한다면 
	ㄴ "문자열" + 변수 + "문자열" + ...

8. 변수를 선언할 때 -> 'var' 넣어주기 ---> var name = 'leegwangmin';

9. document.querySelector('#id, .class, 태그').style.backgroundColor:black;
    ㄴ 여기서, 알수있는 것은 html 태그의 속성에서 배경색은 background-color 인데
    ㄴ JS에서 배경색은 backgroundColor 이다.

10. JS에서 비교 연산자에서 같은가를 확인하는 것은 "===" 이다 (3개)

11. html에서 '<' '>' 를 표현하는 방법 -> &lt;   

12. 자바스크립트를 사용하는 부분에서 (예를 들면 onclick 안에서) var target 과 같이 변수 선언이 가능하다

13. 자바와 마찬가지로 자기 자신을 가리키는 것으로 value 와 같은 값을 바꿀 때에는 this 를 사용하면 된다.

14. document.write('') 의 내용으로 태그가 들어가면 해당 태그의 역할을 해준다.
	이를 이용하여 li의 내용들을 배열과 반복문을 통해 처리 가능

	ㄴ 이때, arr이라는 배열에서 값을 가져와서 리스트로 만들고자 한다면
	        document.write('<li>' + arr[i] + '</li>'); 와 같이 적어준다.

15. 인터넷 페이지에서 검사를 통한 콘솔 창에서 태그들의 내용을 보기 위해서
	console.log(arr[i]); 로 출력 가능

16. 함수를 선언할 수 있다. -> 함수를 선언할 때, 받는 인자로는 'self'로 자기자신
		       -> 전달을 할 때는 'this'로 전달

17. 자바 스크립트에서 배열 선언은 '[]' 로 하고 객체 선언은 '{}'로 한다

18. 객체를 사용하는 방법 -> var coworkers = {}; 선언 후 중괄호 안의 내용으로
	"key값" : "value값",
	"key값" : "value값"... 으로 넣어준다.

	후에 추가적인 삽입이 필요하다면 다음과 같은 2가지 방법을 사용한다.
	 1. coworkers.key값 = "value값";
	 2. coworkers["key값"] = "value값";  
	  ㄴ 보통 2번의 방법은 key값에 띄어쓰기가 필요한 경우에 사용한다.

19. 객체를 순회하는 방법은 for ... in 구문을 사용하면 된다
	ㄴ for(var key in coworkers){ ... }

20. 객체에는 함수도 담을 수 있다 (=메소드)
	ㄴ coworkers.메소드명 = function(){ ... }  
	ㄴ 마찬가지로 var 메소드명 = function(){ ... } 도 가능하다.

21. 함수를 지정할 때, 내부에 존재하는 객체명은 'this'로 처리 가능하다.

22. 객체에서는 key-value 쌍으로 부르지 않고 key가 아닌 프로퍼티 라고 부른다.

23. 자바스크립트의 내용을 여러 페이지에 배포해야 하는 경우 객체로 만들어도 힘이든다.
	이 경우에 파일로 만들어서 배포하면 편하다
	ㄴ "이름.js" 파일로 배포가능
	ㄴ 내용을 구성할 때는 <script> 태그는 제외하고 구성한다.
	ㄴ파일로 만들면 코드를 복붙하지 않고 해당 파일을 포함시키면 된다.

	-> 파일 포함 방법 -> <script src="파일.js"> </script>

24. Ctrl+/ = 주석처리

25. jquery를 이용하면 다른 다양한 기능들을 사용 가능하고 jquery는 라이브러리 이다.
	ㄴ 자바스크립트에서 라이브러리 사용은 여러 방법이 있다.
	    1. 다운받아 프로젝트 폴더에 포함시켜 사용
	    2. 서버에서 제공하는 링크를 통해 페이지 열람시 다운하여 사용
	각 방법의 차이가 있지만, 2번이 간단하다
	ㄴ 방법은 <script src="주소"> <script>로 사용한다. (주소는 알아내야 한다)

26. jquery에서 $() => 메소드인데 모든 내용을 선택하는 것
	ㄴ Ex) $('a') == 페이지 내의 모든 a 태그를 선택하는 메소드
	ㄴ $('a').css('color', color) => a태그 css의 color를 매개변수 color로 바꾸어라 이다.
	ㄴ $('body').css('backgroundColor', color) => body태그 css의 backgroundColor를 매개변수 color로 바꾸어라

27. 라이브러리에서 CDN이란 Conect Data(?) Networt 의 줄임말로 라이브러리를 직접 다운받아
     프로젝트에 포함시키는 것이 아니라 특정 서버에 포함된 내용을 받아오는 방식이다.
     대부분의 라이브러리들이 이를 제공한다. (찾아서 사용하자)

    https://getflywheel.com/layout/best-javascript-libraries-frameworks-2020/
	ㄴ Keyword : JavaScript library 2020 
	ㄴ 검색을 통해 많이 사용된 라이브러리가 무엇인지 알 수 있고, 어떤 효과가 있는지 알 수 있다.

28. 















